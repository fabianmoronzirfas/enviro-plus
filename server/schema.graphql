### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Collector {
  description: String
  id: Int!
  name: String!
  records(after: RecordWhereUniqueInput, before: RecordWhereUniqueInput, first: Int, last: Int, skip: Int): [Record!]!
}

input CollectorCreateInput {
  createdAt: DateTime
  description: String
  name: String!
  records: RecordCreateManyWithoutCollectorInput
}

input CollectorCreateOneWithoutRecordsInput {
  connect: CollectorWhereUniqueInput
  create: CollectorCreateWithoutRecordsInput
}

input CollectorCreateWithoutRecordsInput {
  createdAt: DateTime
  description: String
  name: String!
}

input CollectorWhereUniqueInput {
  id: Int
}

scalar DateTime

type Mutation {
  insertCollector(data: CollectorCreateInput!): Collector!
  insertRecord(data: RecordCreateInput!): Record!
}

type Query {
  collector(where: CollectorWhereUniqueInput!): Collector
  collectors: [Collector!]!
  info: String!
  record(where: RecordWhereUniqueInput!): Record
  records: [Record!]!
}

type Record {
  collector: Collector!
  collectorId: Int!
  humidity: Float
  id: Int!
  light: Float
  nh3: Float
  noise: Float
  oxidising: Float
  pm1: Float
  pm10: Float
  pm2_5: Float
  pressure: Float
  reducing: Float
  temperature: Float
}

input RecordCreateInput {
  collector: CollectorCreateOneWithoutRecordsInput!
  createdAt: DateTime
  humidity: Float
  light: Float
  nh3: Float
  noise: Float
  oxidising: Float
  pm1: Float
  pm10: Float
  pm2_5: Float
  pressure: Float
  reducing: Float
  temperature: Float
}

input RecordCreateManyWithoutCollectorInput {
  connect: [RecordWhereUniqueInput!]
  create: [RecordCreateWithoutCollectorInput!]
}

input RecordCreateWithoutCollectorInput {
  createdAt: DateTime
  humidity: Float
  light: Float
  nh3: Float
  noise: Float
  oxidising: Float
  pm1: Float
  pm10: Float
  pm2_5: Float
  pressure: Float
  reducing: Float
  temperature: Float
}

input RecordWhereUniqueInput {
  id: Int
}
